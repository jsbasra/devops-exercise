name: Poerty CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pylint
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      continue-on-error: true
      run: |
        pylint $(git ls-files '*.py')
        
  build-and-unit-test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v2
      with:
         python-version: 3.9
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.1
      
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install Poetry dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
      
    - name: Run Python App
      run: poetry run python app/main.py &
    - name: Run tests
      run: poetry run python tests.py


      
      
      
      
      
      
      
